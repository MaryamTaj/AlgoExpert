def firstNonRepeatingCharacter(string):
    # Write your code here.
    # 1. Clarify assumptions.
    # Will the output be a non-negative integer? Yes.
    # What happens when you do not have any non-repeating characters? Return -1
    # 2. Identify intial solution. Write pseudocode.
    # Initialize dict which stores each unique characters' count and index. 
    dict = {}
    for char in string:
        dict[char] = [0,0]
    print(dict)
    # Iterate through string.
    # When you encounter a character, increment countDict[char] by 1. Store index.
    for i in range(0, len(string)):
        char = string[i]
        dict[char][0] += 1
        dict[char][1] = i
        # print(f"char: {char}")
        # print(f"dict: {dict}")
   
    # Iterate through countDict. As soon as you encounter a value of 1, 
    # look up the index in indexDict. Return the index. Else, return -1
    for key in dict:
        if dict[key][0] == 1:
            return dict[key][1]
    return -1
    # 3. Write code.
    # 4. Test code.
    # 5. Optimize the code (runtime analysis) = 0(n).
