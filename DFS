# Do not edit the class below except
# for the depthFirstSearch method.
# Feel free to add new properties
# and methods to the class.

class Node:
    def __init__(self, name):
        self.children = []
        self.name = name


    def depthFirstSearch(self, array):
        # 1. Clarify assumptions
        # Will there be cycles in the graph? No.
        # 2. Identify initial solution. Write pseudocode.
        array.append(self.name)
        if self.children == []:
            return array
        else:
            for child in self.children:
                child.depthFirstSearch(array)
            return array

        # 3. Write code.
        # 4. Test code.
        # 5. Optimize code (runtime analysis) = 
        # Time: O(v + e)
        # Space: O(v)
